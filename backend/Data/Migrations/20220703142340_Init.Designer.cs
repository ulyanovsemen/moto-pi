// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220703142340_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Part", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Model")
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasComment("Наименование");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<long>("PartTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("part_type_id");

                    b.HasKey("Id")
                        .HasName("pk_parts");

                    b.HasIndex("PartTypeId")
                        .HasDatabaseName("ix_parts_part_type_id");

                    b.ToTable("parts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Model = "BMW",
                            Name = "Стойка амортизатора",
                            Number = "12345QWE",
                            PartTypeId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Model = "BMW",
                            Name = "Пружина",
                            Number = "ZXC123",
                            PartTypeId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Model = "Bosh",
                            Name = "Поршень",
                            Number = "ZXC123",
                            PartTypeId = 2L
                        });
                });

            modelBuilder.Entity("Data.Entities.PartType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasComment("Наименование");

                    b.HasKey("Id")
                        .HasName("pk_part_types");

                    b.ToTable("part_types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Подвеска"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Двигатель"
                        });
                });

            modelBuilder.Entity("Data.Entities.Part", b =>
                {
                    b.HasOne("Data.Entities.PartType", "Type")
                        .WithMany()
                        .HasForeignKey("PartTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_parts_part_types_part_type_id");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
